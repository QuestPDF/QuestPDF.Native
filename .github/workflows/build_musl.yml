# from: https://github.com/christiaanderidder/QuestPDF.Native/blob/musl-build/.github/workflows/build_questpdf_skia_musl.yml

name: Build Skia + QuestPDF (musl)

on:
  workflow_dispatch:
  push:
    branches:
      - musl-build

jobs:
  build:
    name: ${{ matrix.runtime.name }}
    runs-on: ${{ matrix.runtime.runs-on }}
    container: ${{ matrix.runtime.container }}
      
    strategy:
      fail-fast: false
      matrix:
        runtime: 
        - name: linux-x64
          runs-on: ubuntu-latest
          container: alpine:3.17

    steps:
      - uses: actions/checkout@v3
        
        
      # - name: Configure Alpine 
      #   uses: jirutka/setup-alpine@v1
      #   with:
      #     branch: v3.17
      #     packages: bash wget git python3 build-base cmake clang llvm15 icu-libs linux-headers bsd-compat-headers gn fontconfig font-noto

      - name: Install Build Tools (Alpine)
        shell: sh
        run: |
          apk update
          apk upgrade
          apk add bash wget git python3 build-base cmake clang llvm15 icu-libs linux-headers bsd-compat-headers gn fontconfig font-noto
          
          
      - name: Install dependencies and build Skia
        shell: bash
        run: |          
          git clone https://github.com/google/skia.git --branch chrome/m124 --single-branch ./skia
          cd skia
          bin/fetch-ninja
          python3 tools/git-sync-deps
          
          COMMON_ARGS='
            is_official_build=true
            is_component_build=false
            is_debug=false
            skia_enable_optimize_size=true
            skia_enable_tools=true
            skia_use_system_expat=false
            skia_use_system_icu=false
            skia_use_system_harfbuzz=false
            skia_use_system_libjpeg_turbo=false
            skia_use_system_libpng=false
            skia_use_system_libwebp=false
            skia_use_system_zlib=false
            skia_use_system_freetype2=false
            skia_use_dng_sdk=false
            skia_use_harfbuzz=true
            skia_use_icu=false
            skia_use_icu4x=false
            skia_use_libgrapheme=true
            skia_use_fontconfig=false
            skia_use_gl=false
            skia_use_libjpeg_turbo_decode=true
            skia_use_libjpeg_turbo_encode=true
            skia_use_libpng_encode=true
            skia_use_libpng_decode=true
            skia_use_libwebp_encode=true
            skia_use_libwebp_decode=true
            skia_enable_android_utils=false
            skia_enable_spirv_validation=false
            skia_enable_gpu=false
            skia_enable_gpu_debug_layers=false
            skia_use_jpeg_gainmaps=false
            skia_use_libheif=false
            skia_use_lua=false
            skia_enable_svg=true
            skia_use_expat=true
            skia_enable_skshaper=true
            skia_enable_skunicode=true
            skia_pdf_subset_harfbuzz=true
            skia_enable_pdf=true
            skia_compile_modules=true
            extra_cflags=["-fPIC", "-fno-rtti"]
            skia_use_freetype=true
            cc="clang"
            cxx="clang++"'

          gn gen out/release --args="$COMMON_ARGS"
          ninja -C out/release skia svg skparagraph


      - name: Configure CMake
        shell: bash
        run: >
          cmake
          -S ${PWD}/native
          -B ${PWD}/native/build 
          -DSKIA_DIR=${PWD}/skia 
          -DCMAKE_CXX_COMPILER=clang++ 
          -DCMAKE_C_COMPILER=clang 
          -DCMAKE_BUILD_TYPE=Release


      - name: Build CMake
        shell: bash
        run: >
          cmake 
          --build ${PWD}/native/build 
          --config Release


      - name: Copy build artifact to output directory
        shell: bash
        run: |
          mkdir -p output/runtimes/${{ matrix.runtime.name }}/native
          find native/build -type f \( -name "*.dylib" -o -name "*.dll" -o -name "*.so" \) -exec cp {} output/runtimes/${{ matrix.runtime.name }}/native \;


      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: questpdf-native-libraries
          path: output
            

      - name: Setup .NET 8.0 SDK
        shell: sh
        run: |
          wget https://dot.net/v1/dotnet-install.sh -O dotnet-install.sh
          chmod +x ./dotnet-install.sh
          ./dotnet-install.sh --channel 8.0
          echo "${HOME}/.dotnet" >> $GITHUB_PATH
          
      - name: Test build artifacts
        shell: sh
        run: |
          dotnet build managed --configuration Debug --framework net8.0
          cp -R output/* managed/NativeSkia.Tests/bin/Debug/net8.0
          dotnet test managed --framework net8.0
          mkdir -p testOutput/${{ matrix.runtime.name }} 
          cp -r managed/NativeSkia.Tests/bin/Debug/net8.0/Output/* testOutput/${{ matrix.runtime.name }} 


      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: questpdf-test-results
          path: testOutput
