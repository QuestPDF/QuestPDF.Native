name: Build Skia + QuestPDF

on:
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.runtime.name }}
    runs-on: ${{ matrix.runtime.runs-on }}
    container: ${{ matrix.runtime.container }}
      
    strategy:
      fail-fast: false
      matrix:
        runtime: 
        - name: windows-x64
          runs-on: windows-latest-large
        - name: linux-x64
          runs-on: ubuntu-18-large
          container: ubuntu:18.04
        - name: linux-arm64
          runs-on: ubuntu-latest-large
          container: ubuntu:18.04
        - name: macos-x64
          runs-on: macos-latest-large
        - name: macos-arm64
          runs-on: macos-latest-xlarge

    steps:
      - uses: actions/checkout@v3

      - name: Install Clang
        if: runner.os == 'Linux'
        run: |
          apt-get update --yes
          apt-get install wget git --yes

          apt-get install --yes software-properties-common
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
          add-apt-repository "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-15 main"

          apt-get update --yes
          apt-get install --yes clang-15 lldb-15 lld-15
          
          update-alternatives --install /usr/bin/cc cc /usr/bin/clang-15 100
          update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-15 100

          update-alternatives --config cc
          update-alternatives --config c++

          cc --version
          c++ --version


      - name: Set up Python 3.8
        if: runner.os == 'Linux'
        shell: bash
        run: |
            apt install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev wget --yes

            wget https://www.python.org/ftp/python/3.8.18/Python-3.8.18.tgz
            tar xzf Python-3.8.18.tgz
            cd Python-3.8.18
            
            ./configure --enable-optimizations
            make
            make install


      - name: Set up Python 3.x
        if: runner.os != 'Linux'
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          

      - name: Install dependencies and build Skia
        shell: bash
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          echo "${{ github.workspace }}/depot_tools" >> $GITHUB_PATH
          export PATH="${PWD}/depot_tools:${PATH}"
          
          git clone https://github.com/google/skia.git --branch chrome/m122 --single-branch
          cd skia
          bin/fetch-ninja
          python tools/git-sync-deps
          
          COMMON_ARGS='
            is_component_build=false
            is_debug=false
            skia_enable_optimize_size=true
            skia_enable_tools=true
            skia_use_system_expat=false
            skia_use_system_icu=false
            skia_use_system_harfbuzz=false
            skia_use_system_libjpeg_turbo=false
            skia_use_system_libpng=false
            skia_use_system_libwebp=false
            skia_use_system_zlib=false
            skia_use_system_freetype2=false
            skia_use_dng_sdk=false
            skia_use_harfbuzz=true
            skia_use_icu=false
            skia_use_icu4x=false
            skia_use_libgrapheme=true
            skia_use_fontconfig=false
            skia_use_gl=false
            skia_use_libjpeg_turbo_decode=true
            skia_use_libjpeg_turbo_encode=true
            skia_use_libpng_encode=true
            skia_use_libpng_decode=true
            skia_use_libwebp_encode=true
            skia_use_libwebp_decode=true
            skia_enable_android_utils=false
            skia_enable_spirv_validation=false
            skia_enable_gpu=false
            skia_enable_gpu_debug_layers=false
            skia_use_jpeg_gainmaps=false
            skia_use_libheif=false
            skia_use_lua=false
            skia_enable_svg=true
            skia_use_expat=true
            skia_enable_skshaper=true
            skia_enable_skunicode=true
            skia_pdf_subset_harfbuzz=true
            skia_enable_pdf=true
            skia_compile_modules=true
            skia_use_safe_libcxx=true
            skia_enable_fontmgr_custom_embedded=true
            extra_cflags=["-fPIC", "-fno-rtti"]'
            
          if [ "${{ runner.os }}" = "Linux" ]; then
            COMMON_ARGS+=' cc="clang" cxx="clang++"'
          fi
          
          if [ "${{ runner.os }}" = "macOS" ]; then
            COMMON_ARGS+=' skia_use_fonthost_mac=true'
          fi

          bin/gn gen out/release --args="$COMMON_ARGS"
          ninja -C out/release skia svg skparagraph


      - name: Configure CMake
        run: >
          cmake
          -S ${{ github.workspace }}/native
          -B ${{ github.workspace }}/native/build 
          -DSKIA_DIR=${{ github.workspace }}/skia 
          -DCMAKE_CXX_COMPILER=clang++ 
          -DCMAKE_C_COMPILER=clang 
          -DCMAKE_BUILD_TYPE=Release


      - name: Build CMake
        run: >
          cmake 
          --build ${{ github.workspace }}/native/build 
          --config Release


      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: questpdf-native-libraries-${{ matrix.runtime.name }}
          path: |
            **/*.so
            **/*.dylib
            **/*.dll
