diff --git a/modules/skparagraph/include/Paragraph.h b/modules/skparagraph/include/Paragraph.h
index c5d03e9269..baaad9e14f 100644
--- a/modules/skparagraph/include/Paragraph.h
+++ b/modules/skparagraph/include/Paragraph.h
@@ -41,6 +41,8 @@ public:
 
     virtual void layout(SkScalar width) = 0;
 
+    virtual void paintLines(SkCanvas* canvas, int from, int to) = 0;
+
     virtual void paint(SkCanvas* canvas, SkScalar x, SkScalar y) = 0;
 
     virtual void paint(ParagraphPainter* painter, SkScalar x, SkScalar y) = 0;
diff --git a/modules/skparagraph/src/ParagraphImpl.cpp b/modules/skparagraph/src/ParagraphImpl.cpp
index ac8e21543e..531a701803 100644
--- a/modules/skparagraph/src/ParagraphImpl.cpp
+++ b/modules/skparagraph/src/ParagraphImpl.cpp
@@ -240,6 +240,26 @@ void ParagraphImpl::layout(SkScalar rawWidth) {
     //SkDebugf("layout('%s', %f): %f %f\n", fText.c_str(), rawWidth, fMinIntrinsicWidth, fMaxIntrinsicWidth);
 }
 
+void ParagraphImpl::paintLines(SkCanvas* canvas, int from, int to) {
+    if (canvas == nullptr || from > to) {
+        return;
+    }
+
+    if (from < 0) {
+        from = 0;
+    }
+
+    if (to >= fLines.size()) {
+        to = fLines.size() - 1;
+    }
+
+    CanvasParagraphPainter painter(canvas);
+
+    for (int i = from; i <= to; ++i) {
+        fLines[i].paint(&painter, 0, 0);
+    }
+}
+
 void ParagraphImpl::paint(SkCanvas* canvas, SkScalar x, SkScalar y) {
     CanvasParagraphPainter painter(canvas);
     paint(&painter, x, y);
diff --git a/modules/skparagraph/src/ParagraphImpl.h b/modules/skparagraph/src/ParagraphImpl.h
index 2fbd05df18..80a7fe5250 100644
--- a/modules/skparagraph/src/ParagraphImpl.h
+++ b/modules/skparagraph/src/ParagraphImpl.h
@@ -106,6 +106,7 @@ public:
     ~ParagraphImpl() override;
 
     void layout(SkScalar width) override;
+    void paintLines(SkCanvas* canvas, int from, int to) override;
     void paint(SkCanvas* canvas, SkScalar x, SkScalar y) override;
     void paint(ParagraphPainter* canvas, SkScalar x, SkScalar y) override;
     std::vector<TextBox> getRectsForRange(unsigned start,
